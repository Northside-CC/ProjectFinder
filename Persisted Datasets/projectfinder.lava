{% sql %}
    WITH SignUpOccurrences AS (
        SELECT g.[Name], glsc.ConfigurationName, s.EffectiveStartDate, s.iCalendarContent, glsc.MinimumCapacity, glsc.DesiredCapacity, glsc.MaximumCapacity, g.Id AS GroupId, gl.LocationId, s.Id AS ScheduleId
          FROM GroupLocationScheduleConfig glsc
            JOIN [GroupLocation] gl ON (glsc.GroupLocationId = gl.Id)
            JOIN [Group] g ON (gl.GroupId = g.Id)
            JOIN [Schedule] s ON (glsc.ScheduleId = s.Id)
            JOIN AttributeValue atv ON (atv.EntityId = g.Id AND atv.AttributeId = 20707)
         WHERE g.GroupTypeId = 167 -- Sign-Up Group Type
           AND g.IsPublic = 1 -- Ensures only the published projects are listed
           AND g.IsArchived = 0
           AND atv.[Value] = 'True'
           AND DATEDIFF(DAY, GETDATE(), s.EffectiveStartDate) >= 0 -- Only get projects in the future or that are today
    )
    SELECT COUNT(gma.GroupMemberId) AS MemberQuantity, suo.[LocationId], suo.[ScheduleId], suo.GroupId, suo.[Name], suo.[ConfigurationName], suo.EffectiveStartDate, suo.iCalendarContent, suo.MinimumCapacity, suo.DesiredCapacity, suo.MaximumCapacity
      FROM SignUpOccurrences suo
        JOIN GroupMemberAssignment gma ON (gma.LocationId = suo.LocationId AND gma.ScheduleId = suo.ScheduleId)
        JOIN [GroupMember] gm ON (gm.GroupId = suo.GroupId AND gm.Id = gma.GroupMemberId)
     WHERE gm.GroupMemberStatus = 1
     GROUP BY suo.[LocationId], suo.[ScheduleId], suo.GroupId, suo.[Name], suo.[ConfigurationName], suo.EffectiveStartDate, suo.iCalendarContent, suo.MinimumCapacity, suo.DesiredCapacity, suo.MaximumCapacity
     ORDER BY suo.GroupId, suo.EffectiveStartDate
{% endsql %}

[
    {% for occurrence in results %}
        {% group where:'Id == "{{ occurrence.GroupId }}"' securityenabled:'false' %}
            {% assign group = groupItems | First %}
            
            //- Organization
            {% assign organization = group | Attribute:'Organization' %}
            
            //- Organization Id
            {% assign organizationId = group | Attribute:'Organization','RawValue' %}
            
            //- ProjectKey
            {% assign projectKey = group.IdKey %}
            
            //- ScheduleKey
            {% schedule expression:'Id == "{{ occurrence.ScheduleId }}"' securityenabled:'false' %}
                {% assign scheduleKey = scheduleItems | First | Property:'IdKey' %}
            {% endschedule %}
            
            //- Schedule
            {% assign schedule = '' %}
            {% assign scheduleDates = occurrence.iCalendarContent | DatesFromICal:1 %}
            {% for date in scheduleDates %}
                {% assign scheduleTime = date | Date:'h:mm tt' | Trim %}
                {% assign schedule = date | Date:'dddd MMM dd' %}
                {%- if scheduleTime != '' -%}    
                    {% assign schedule = schedule | Append:' at ' %}
                    {% assign schedule = schedule | Append:scheduleTime %}
                {% endif %}
            {% endfor %}
            
            //- ScheduleAsDateTime
            {% assign scheduleAsDateTime = '' %}
            {% assign scheduleDates = occurrence.iCalendarContent | DatesFromICal:1 %}
            {% for date in scheduleDates %}
                {% assign scheduleAsDateTime = date | Date:'yyyy-MM-ddTHH:mm:ss.fffzzz' %}
            {% endfor %}
            
            //- Duration
            {% assign start = occurrence.iCalendarContent | DatesFromICal:'1','startdatetime' | First | AsDateTime %}
            {% assign end = occurrence.iCalendarContent | DatesFromICal:'1','enddatetime' | First | AsDateTime %}
            {% assign duration = start | DateDiff:end,'h' | Append:' hrs' %}
            
            //- Location && LocationKey
            {% assign isOnsite = group | Attribute:'OnSite','RawValue' | AsBoolean %}
            {% assign fullAddress = '' %}
            {% capture locationDetail %}
                {% location where:'Id == "{{ occurrence.LocationId }}"' %}
                    {% if location.City != null and location.City != '' %}
                        {% if isOnsite %}
                            On Site at Northside
                        {% else %}
                            {{ location.City }}{% if location.PostalCode != '' %}, {{ location.PostalCode | Slice:0,5 }}{% endif %}
                        {% endif %}
                        {% assign locationKey = location.IdKey %}
                        {% break %}
                    {% endif %}
                {% endlocation %}
            {% endcapture %}
            
            //- Full Address
            {% assign fullAddress = location.FormattedHtmlAddress %}
            
            //- Volunteers Bring
            {% assign volunteersBring = group | Attribute:'ResourcesToBring' %}
            
            //- Occurrence Name
            {% assign occurrenceName = '' %}
            {% if occurrence.ConfigurationName != null and occurrence.ConfigurationName != '' %}
                {% assign occurrenceName = occurrence.ConfigurationName %}
            {% else %}
                {% assign occurrenceName = group.Name %}
            {% endif %}
            
            //- Most Needed
            {% assign desired = occurrence.DesiredCapacity | AsDecimal %}
            {% assign minimum = occurrence.MinimumCapacity | AsDecimal %}
            {% assign maximum = occurrence.MaximumCapacity | AsDecimal %}
            {% assign joined = occurrence.MemberQuantity | AsDecimal %}
            {% assign percentThreshold = 'Global' | Attribute:'Threshold' | AsDecimal %}
            {% assign percentFilled = joined | DividedBy:desired %}
            {% assign percentFilledMinimum = joined | DividedBy:minimum %}
            {% assign percentFilledMaximum = joined | DividedBy:maximum %}
            {% assign now = 'Now' | Date %}
            {% assign daysUntilProject = now | DateDiff:start,'d' %}
            {% assign daysPriorForHighestNeedConsideration = 'Global' | Attribute:'DaysUntilProjectForHighestNeedConsideration' %}
            
            {% if percentFilled <= percentThreshold and daysUntilProject <= daysPriorForHighestNeedConsideration %}
                {% assign mostNeeded = true | AsBoolean %}
            {% else %}
                {% assign mostNeeded = false | AsBoolean %}
            {% endif %}
            
            {% if percentFilledMaximum >= 1.0 %}
                {% assign isFull = true %}
            {% else %}
                {% assign isFull = false %}
            {% endif %}
            
            //- Project Type
            {% assign projectType = group | Attribute:'ProjectType' %}
            
            //- Project Type Id
            {% assign projectTypeId = group | Attribute:'ProjectType','RawValue' %}
            
            //- For ServeDay indicator
            {% assign forServeDay = group | Attribute:'ForServeDay' | AsBoolean %}
            
            //- For Groups That Serve indicator
            {% assign forGroupsThatServe = group | Attribute:'ForGroupsThatServe' | AsBoolean %}

            //- Image
            {% assign groupImg = group | Attribute:'Image','RawValue' %}
            {% if groupImg != null and groupImg != '' %}
                {% assign groupImg = groupImg | ImageUrl | TriumphImgCdn:'auto=format,compress&w=640&h=360&fit=crop' %}
            {% elseif  forServeDay %}
                {% assign serveDayGlobalImage = 'Global' | Attribute:'ServeDayProjectImage','RawValue' %}
                {% assign groupImg = serveDayGlobalImage | ImageUrl | TriumphImgCdn:'auto=format,compress&w=640&h=360&fit=crop' %}
            {% endif %}

            //- Community Submitted
            {% assign communitySubmitted = group | Attribute:'CommunitySubmitted' | AsBoolean %}

            //- Published Date Time
            {% assign publishedDateTime = group | Attribute:'PublishDateTime' | Date:'yyyy-MM-ddT00:00:00.000' %}
            
            {%- capture emailPreferenceMatching -%}
                {{- group | Attribute:'ProjectCharacteristics','RawValue' -}}
                {%- if organization != '' -%}
                    {{- ',' -}}{{- group | Attribute:'Organization','RawValue' -}}
                {%- endif -%}
            {%- endcapture -%}
            
            //- Age Requirement
            {% assign ageRequirement = '' %}
            
            {% assign characteristics = group | Attribute:'ProjectCharacteristics' | Split:',' %}
            {% for characteristic in characteristics %}
                {% if characteristic contains 'Age Required' %}
                    {% assign ageRequirement = characteristic %}
                    {% break %}
                {% endif %}
            {% endfor %}
            
            {
                "GroupId": {{ group.Id }},
                "ProjectKey": {{ projectKey | ToJSON }},
                "Guid": {{ group.Guid | ToJSON }},
                "Name": {{ occurrenceName | ToJSON }},
                "ProjectName": {{ group.Name | ToJSON }},
                "ShiftName": {{ occurrence.ConfigurationName | ToJSON }},
                "Image": {{ groupImg | ToJSON }},
                "Description": {{ group.Description | NewlineToBr | ToJSON }},
                "IsOnsite": {{ isOnsite | ToJSON }},
                "Schedule": {{ schedule | ToJSON }},
                "ScheduleKey": {{ scheduleKey | ToJSON }},
                "ScheduleAsDateTime": {{ scheduleAsDateTime | ToJSON }},
                "Duration": {{ duration | ToJSON }},
                "Location": {{ locationDetail | StripNewlines | Trim | ToJSON }},
                "LocationKey": {{ locationKey | ToJSON }},
                "FullAddress": {{ fullAddress | ToJSON }},
                "Organization": {{ organization | ToJSON }},
                "OrganizationId": {{ organizationId | ToJSON }},
                "VolunteersBring": {{ volunteersBring | ToJSON }},
                "ScheduleId": {{ occurrence.ScheduleId | ToJSON }},
                "LocationId": {{ occurrence.LocationId | ToJSON }},
                "ProjectType": {{ projectType | ToJSON }},
                "ProjectTypeId": {{ projectTypeId | Upcase | ToJSON }},
                "MostNeeded": {{ mostNeeded | ToJSON }},
                "PercentFilledDesired": {{ percentFilled | ToJSON }},
                "PercentFilledMinimum": {{ percentFilledMinimum | ToJSON }},
                "PercentFilledMaximum": {{ percentFilledMaximum | ToJSON }},
                "SpotsAvailable": {{ occurrence.MaximumCapacity | Minus:joined | ToJSON }},
                "MinimumCapacity": {{ occurrence.MinimumCapacity | ToJSON }},
                "DesiredCapacity": {{ occurrence.DesiredCapacity | ToJSON }},
                "MaximumCapacity": {{ occurrence.MaximumCapacity | ToJSON }},
                "PublishedDateTime": {{ publishedDateTime | ToJSON }},
                "ForServeDay": {{ forServeDay | ToJSON }},
                "ForGroupsThatServe": {{ forGroupsThatServe | ToJSON }},
                "CommunitySubmitted": {{ communitySubmitted | ToJSON }},
                "EmailPreferenceMatching": {{ emailPreferenceMatching | Trim | ToJSON }},
                "AgeRequirement": {{ ageRequirement | ToJSON }},
                "MemberQuantity": {{ occurrence.MemberQuantity | ToJSON }},
                "IsFull": {{ isFull | ToJSON }}
            }{% unless forloop.last %},{% endunless %}
        {% endgroup %}
    {% endfor %}
]
